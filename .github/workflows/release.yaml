name: "Release"

on:
  release:
    types:
      - "published"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish-pypi:
    name: Builds and publishes releases to PyPI
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.vars.outputs.tag }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Get tag
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Install uv
        uses: astral-sh/setup-uv@b5f58b2abc5763ade55e4e9d0fe52cd1ff7979ca # v5

      - name: Set up Python
        run: uv python install 3.11

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Set Python project version from tag
        run:  uvx hatch version "${{ steps.vars.outputs.tag }}"

      - name: Build
        run: uv build

      - name: Publish
        run: uv publish --token ${{ secrets.PYPI_TOKEN }}

      #- name: Publish release to PyPI
      #  uses: pypa/gh-action-pypi-publish@897895f1e160c830e369f9779632ebc134688e1b # v1.10.2
        #with:
        #  user: __token__
        #  password: ${{ secrets.PYPI_TOKEN }}

      - name: Upload release assets
        uses: softprops/action-gh-release@v2.2.1 
        with:
          files: |
            dist/*.whl
            dist/*.tar.gz

  build-and-push-container-image:
    name: Builds and pushes the Energy Assistant container to ghcr.io
    runs-on: "ubuntu-latest"
    permissions:
      contents: read
      packages: write
    needs: build-and-publish-pypi
    steps:
      - name: Sleep for 60 seconds (to prevent race condition with the pypi upload)
        run: sleep 60s
        shell: bash
      - name: "Checkout the repository"
        uses: "actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683" # v4

      - name: Log in to the Container registry
        uses: docker/login-action@327cd5a69de6c009b9ce71bce8395f28e651bf99
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0
      - name: Version number for tags
        id: tags
        shell: bash
        run: |-
          patch=${GITHUB_REF#refs/*/}
          echo "patch=${patch}" >> $GITHUB_OUTPUT
          echo "minor=${patch%.*}" >> $GITHUB_OUTPUT
          echo "major=${patch%.*.*}" >> $GITHUB_OUTPUT
          if [[ $patch =~ "b" ]]; then
            echo "channel=beta" >> $GITHUB_OUTPUT
          else
            echo "channel=stable" >> $GITHUB_OUTPUT
          fi

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/energy-assistant-server

      - name: Build and push Docker image
        uses: docker/build-push-action@67a2d409c0a876cbe6b11854e3e25193efe4e62d
        with:
          context: .
          platforms: linux/amd64
          file: Dockerfile
          tags: |-
            ghcr.io/${{ github.repository_owner }}/energy-assistant-server:${{ steps.tags.outputs.patch }},
            ghcr.io/${{ github.repository_owner }}/energy-assistant-server:${{ steps.tags.outputs.minor }},
            ghcr.io/${{ github.repository_owner }}/energy-assistant-server:${{ steps.tags.outputs.major }},
            ghcr.io/${{ github.repository_owner }}/energy-assistant-server:${{ steps.tags.outputs.channel }},
            ghcr.io/${{ github.repository_owner }}/energy-assistant-server:latest
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            "EASS_VERSION=${{ needs.build-and-publish-pypi.outputs.version }}"
