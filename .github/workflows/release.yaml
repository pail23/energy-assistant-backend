name: "Release"

on:
  release:
    types:
      - "published"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish-pypi:
    name: Builds and publishes releases to PyPI
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.vars.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
      - name: Get tag
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
      - name: Set up Python 3.11
        uses: actions/setup-python@v5.0.0
        with:
          python-version: "3.11"
      - name: Install build
        run: >-
          pip install build tomli tomli-w
      - name: Set Python project version from tag
        shell: python
        run: |-
          import tomli
          import tomli_w

          with open("pyproject.toml", "rb") as f:
            pyproject = tomli.load(f)

          pyproject["project"]["version"] = "${{ steps.vars.outputs.tag }}"

          with open("pyproject.toml", "wb") as f:
            tomli_w.dump(pyproject, f)
      - name: Build
        run: >-
          python3 -m build
      - name: Publish release to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.11
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}

      - name: Upload release assets
        uses: softprops/action-gh-release@v0.1.15
        with:
          files: |
            dist/*.whl
            dist/*.tar.gz

  build-and-push-container-image:
    name: Builds and pushes the Energy Assistant container to ghcr.io
    runs-on: "ubuntu-latest"
    permissions:
      contents: read
      packages: write
    needs: build-and-publish-pypi
    steps:
      - name: Sleep for 60 seconds (to prevent race condition with the pypi upload)
        run: sleep 60s
        shell: bash
      - name: "Checkout the repository"
        uses: "actions/checkout@v4"

      - name: Log in to the Container registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.1.0
      - name: Version number for tags
        id: tags
        shell: bash
        run: |-
          patch=${GITHUB_REF#refs/*/}
          echo "patch=${patch}" >> $GITHUB_OUTPUT
          echo "minor=${patch%.*}" >> $GITHUB_OUTPUT
          echo "major=${patch%.*.*}" >> $GITHUB_OUTPUT
          if [[ $patch =~ "b" ]]; then
            echo "channel=beta" >> $GITHUB_OUTPUT
          else
            echo "channel=stable" >> $GITHUB_OUTPUT
          fi

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/energy-assistant-server

      - name: Build and push Docker image
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: Dockerfile
          tags: |-
            ghcr.io/${{ github.repository_owner }}/energy-assistant-server:${{ steps.tags.outputs.patch }},
            ghcr.io/${{ github.repository_owner }}/energy-assistant-server:${{ steps.tags.outputs.minor }},
            ghcr.io/${{ github.repository_owner }}/energy-assistant-server:${{ steps.tags.outputs.major }},
            ghcr.io/${{ github.repository_owner }}/energy-assistant-server:${{ steps.tags.outputs.channel }},
            ghcr.io/${{ github.repository_owner }}/energy-assistant-server:latest
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            "EASS_VERSION=${{ needs.build-and-publish-pypi.outputs.version }}"
