name: "Release"

on:
  release:
    types:
      - "published"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish-pypi:
    name: Builds and publishes releases to PyPI
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.vars.outputs.tag }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Get tag
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Install uv
        uses: astral-sh/setup-uv@3259c6206f993105e3a61b142c2d97bf4b9ef83d # v7
        with:
          python-version: 3.12
          activate-environment: true

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Set Python project version from tag
        run:  uvx hatch version "${{ steps.vars.outputs.tag }}"

      - name: Build
        run: uv build

      - name: Publish
        run: uv publish --token ${{ secrets.PYPI_TOKEN }}

      #- name: Publish release to PyPI
      #  uses: pypa/gh-action-pypi-publish@897895f1e160c830e369f9779632ebc134688e1b # v1.10.2
        #with:
        #  user: __token__
        #  password: ${{ secrets.PYPI_TOKEN }}

      - name: Upload release assets
        uses: softprops/action-gh-release@v2.4.1
        with:
          files: |
            dist/*.whl
            dist/*.tar.gz

  build-and-push-container-image:
    name: Builds and pushes the Energy Assistant container to ghcr.io
    runs-on: "ubuntu-latest"
    permissions:
      contents: read
      packages: write
    needs: build-and-publish-pypi
    steps:
      - name: Sleep for 60 seconds (to prevent race condition with the pypi upload)
        run: sleep 60s
        shell: bash
      - name: "Checkout the repository"
        uses: "actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8" # v5

      - name: Log in to the Container registry
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: Version number for tags
        id: tags
        shell: bash
        run: |-
          patch=${GITHUB_REF#refs/*/}
          echo "patch=${patch}" >> $GITHUB_OUTPUT
          echo "minor=${patch%.*}" >> $GITHUB_OUTPUT
          echo "major=${patch%.*.*}" >> $GITHUB_OUTPUT
          if [[ $patch =~ "b" ]]; then
            echo "channel=beta" >> $GITHUB_OUTPUT
          else
            echo "channel=stable" >> $GITHUB_OUTPUT
          fi

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/energy-assistant-server

      - name: Build and push Docker image
        uses: docker/build-push-action@9e436ba9f2d7bcd1d038c8e55d039d37896ddc5d
        with:
          context: .
          platforms: linux/amd64
          file: Dockerfile
          tags: |-
            ghcr.io/${{ github.repository_owner }}/energy-assistant-server:${{ steps.tags.outputs.patch }},
            ghcr.io/${{ github.repository_owner }}/energy-assistant-server:${{ steps.tags.outputs.minor }},
            ghcr.io/${{ github.repository_owner }}/energy-assistant-server:${{ steps.tags.outputs.major }},
            ghcr.io/${{ github.repository_owner }}/energy-assistant-server:${{ steps.tags.outputs.channel }},
            ghcr.io/${{ github.repository_owner }}/energy-assistant-server:latest
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            "EASS_VERSION=${{ needs.build-and-publish-pypi.outputs.version }}"
