name: "Lint and test"

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  lint:
    name: "Ruff"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Checkout the repository"
        uses: "actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8" # v5

      - name: Install uv
        uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24 # v7
        with:
          python-version: 3.12
          activate-environment: true

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: "Run ruff"
        run: uv run ruff check .

      - name: "run mypy"
        run: uv run mypy energy_assistant

      - name: "Generate docu"
        run: uvx mkdocs gh-deploy --force

  tests:
    runs-on: "ubuntu-latest"
    name: Run tests
    steps:
      - name: Check out code from GitHub
        uses: "actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8" # v5

      - name: Install uv
        uses: astral-sh/setup-uv@2ddd2b9cb38ad8efd50337e8ab201519a34c9f24 # v7
        with:
          python-version: 3.12
          activate-environment: true

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Run tests
        run: |
          uv run pytest \
            -qq \
            --durations=10 \
            -o console_output_style=count \
            -p no:sugar \
            --cov=./ \
            --cov-report=xml \
            tests
        env:
          APP_CONFIG_FILE: test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          # directory: ./coverage/reports/
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          #files: ./coverage.xml,!./cache
          flags: unittests
          name: codecov-umbrella
          verbose: true
